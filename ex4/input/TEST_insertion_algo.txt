array IntArr = int[];

int continueInnerLoop(int key, IntArr arr, int j) {
    if (j < 0) {return 0;}
    return (key < arr[j]);
}

void sort(IntArr arr, int n){
	int i := 1;
	while (i < n) {
		int key := arr[i];
		int j := i - 1;

		while (continueInnerLoop(key, arr, j)) {
			arr[j + 1] := arr[j];
			j := j - 1;
		}
		arr[j + 1] := key;
		i := i + 1;
	}
}
void fillArrOfFive(IntArr arr, int a, int b, int c, int d, int e) {
	arr[0] := a;
	arr[1] := b;
	arr[2] := c;
	arr[3] := d;
	arr[4] := e;
}

void printArr(IntArr arr, int len) {
    int i := 0;

    while (i < len) {
        PrintInt(arr[i]);
        i := i + 1;
    }
}

void main() {
	int len := 5;
	IntArr arr := new int[len];
	fillArrOfFive(arr, 1, 2, 3, 5, 4);
	printArr(arr, len);
	PrintString("SEP");
	sort(arr, len);
	printArr(arr, len);
    printArr(arr, len);

	// ones more time
	fillArrOfFive(arr, 5, 1240, 150, 100, -530);
    PrintString("SEP");
	printArr(arr, len);
	PrintString("SEP");
	sort(arr, len);
	printArr(arr, len);

	// another one
    PrintString("SEP");
	fillArrOfFive(arr, -1, -2, -3, -4, -5);
    sort(arr, len);
    printArr(arr, len);
}